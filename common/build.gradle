if (rootProject.ext.isModuleHome){
    apply plugin:'com.android.library'
}else {
    apply plugin:'com.android.application'
}
apply plugin:'org.jetbrains.kotlin.android'
android {
    def android = this.rootProject.ext.app_android
    namespace 'com.demo.home'
    compileSdk android.compileSdk
    defaultConfig {
        minSdk android.minSdk
        targetSdk android.targetSdk
        versionName android.versionName
        versionCode android.versionCode
        testInstrumentationRunner android.testInstrumentationRunner
        consumerProguardFiles "consumer-rules.pro"
    }
    flavorDimensions "demo"
    // 打包
    productFlavors {
        demo {

        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        demo {
            res.srcDirs = ['src/demo/java','src/demo/res']
        }

        main {
            res.srcDirs = ['src/main/java','src/main/res']
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}
def impl = rootProject.ext.app_impl
def testImpl = rootProject.ext.app_testImpl
dependencies {
    api  impl.appcompat
    api  impl.constraintlayout
    api  impl.okhttp3
    api  impl.glide
    api  impl.ktx
    api  impl.arouter
    api  impl.glide_compiler
    api  impl.retrofit
    api  impl.retrofit_converter_gson
    testApi testImpl.junit
    androidTestApi testImpl.ext_unit
    androidTestApi testImpl.espresso_core
}



